from aiogram import types
from aiogram.fsm.context import FSMContext

from players.models import Player
from telegram.buttons import basic
from telegram.handlers.registration import start_register
from telegram.states.registration import RegistrationsState


async def start(message: types.Message, state):
    tg_user = message.from_user

    try:
        player = await Player.objects.aget(tg_id=tg_user.id)
        tg_username = await get_player_tg_username(message)
        state_data = await state.get_data()
        state_data['id'] = player.id
        state_data['tg_username'] = tg_username
        await state.set_data(state_data)

        await main_menu(message)

    except Player.DoesNotExist:
        await message.bot.send_message(tg_user.id, "–ü—Ä–∏–≤–µ—Ç!üòÄ\n"
                                                   "–ú–µ–Ω—è –∑–æ–≤—É—Ç RentBot, –∏ —è –±—É–¥—É —Ç–≤–æ–∏–º –ª–∏—á–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º, "
                                                   "–∫–æ–≥–¥–∞ —Ç–µ–±–µ –∑–∞—Ö–æ—á–µ—Ç—Å—è –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä—Ç.\n"
                                                   "–î–∞–≤–∞–π –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è")

        await state.set_state(state=RegistrationsState.start)

        await start_register(message, state)


async def about(message: types.Message):
    bot_name = await message.bot.get_me()
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!) –ù–∞ —Å–≤—è–∑–∏ üëæ @{bot_name.username})\n"
                         "\n"
                         "–Ø —Ö–æ—Ç–µ–ª –±—ã —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –∫–∞–∫ —Å–æ –º–Ω–æ–π –ø–æ–ª–∞–¥–∏—Ç—å –∫—É–¥–∞ –Ω–∞–∂–∏–º–∞—Ç—å, "
                         "—á—Ç–æ–±—ã –Ω–∞–º –æ–±–æ–∏–º –±—ã–ª–æ —Ö–æ—Ä–æ—à–æü•∞ –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —á–µ–≥–æ –≤–æ–æ–±—â–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ!üòá)\n"
                         "\n"
                         "–î–ª—è –æ—Ç–º–µ–Ω—ã/–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–≥—Ä –∑–∞–π–¥–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫—É - ‚öî–ú–æ–∏ –ò–≥—Ä—ã‚öî\n"
                         "\n"
                         "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö –∏–≥—Ä –≤–∫–ª–∞–¥–∫–∞ - üìú–í—Å–µ –ò–≥—Ä—ãüìú\n"
                         "\n"
                         "–í—ã—Ö–æ–¥–Ω—ã–µ: –∑–∞–ø–∏—Å—å –Ω–∞ 2 —á–∞—Å–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–æ 9 —É—Ç—Ä–∞üïò\n"
                         "–ë—É–¥–Ω–∏: –∑–∞–ø–∏—Å—å –Ω–∞ 2 —á–∞—Å–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–æ 13:30 –¥–Ω—èüïë\n"
                         "–í –æ—Å—Ç–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å—å –≤–æ–∑–º–æ–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ 1.5 —á–∞—Å–∞ –∏–ª–∏ –º–µ–Ω—å—à–µ.üòì\n"
                         "\n"
                         "–£ –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –¥–≤–∞ —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—éüò≠,"
                         "–Ω–µ–¥–µ–ª—è —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µü§ì\n"
                         "\n"
                         "–ë–æ–ª—å—à–∞—è –ø—Ä–æ—Å—å–±–∞ - –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–∏–¥—Ç–∏ –≤ –∑–∞–ø–∏—Å–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞,"
                         "—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –æ—Ç–º–µ–Ω—è—Ç—å –∏–≥—Ä—ã –∑–∞—Ä–∞–Ω–µ–µ!üôå –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –±—É–¥—É—Ç –≤–∞–º –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω—ã‚ò∫!\n"
                         "\n"
                         "–°—É–ø–µ—Ä! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–æ—á–∏—Ç–∞–ª –∏ –•–æ—Ä–æ—à–µ–π –∏–≥—Ä—ã!üòç))\n"
                         "\n"
                         "–ê, —á—É—Ç—å –Ω–µ –∑–∞–±—ã–ª - –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ—Ä—Ç –º–æ–∂–Ω–æ –≤–æ –≤–∫–ª–∞–¥–∫–µ - üéæ–ó–∞–ø–∏—Å–∞—Ç—å—Å—è!üéæ\n"
                         "\n"
                         "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é - /start")


async def main_menu(message: types.Message):
    await message.answer("–í—ã –≤ –ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n"
                         "\n"
                         "–†–µ–±—è—Ç–∞ –≤—Å–µ–º –ø—Ä–∏–≤–µ—Ç! üëã, –ø–ª–∏–∏–∑–∑üôå))\n"
                         "–ü—Ä–æ—á—Ç–∏—Ç–µ –∫—Ä–∞—Ç–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\–ø—Ä–∞–≤–∏–ª–∞, –≤—ã –∏—Ö —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É --> /help "
                         ", –µ—Å–ª–∏ —É–∂–µ —Å–æ –≤—Å–µ–º –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É --> /start üòá\n",
                         reply_markup=basic.main_menu_keyboard)


async def redirect_to_bot(message: types.Message, state: FSMContext):
    bot_name = await message.bot.get_me()
    await state.set_state(None)
    await message.answer(f'–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ—Ä—Ç –ø–∏—à–∏—Ç–µ –≤ –ª–∏—á–∫—É –±–æ—Ç–∞  @{bot_name.username}',
                         reply_markup=types.ReplyKeyboardRemove())


async def redirect_to_bot_callback(call: types.CallbackQuery, state: FSMContext):
    bot_name = await call.bot.get_me()
    await state.set_state(None)
    await call.message.answer(f'–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ—Ä—Ç –ø–∏—à–∏—Ç–µ –≤ –ª–∏—á–∫—É –±–æ—Ç–∞ @{bot_name.username}',
                              reply_markup=types.ReplyKeyboardRemove())


async def get_player_tg_username(message: types.Message):
    tg_id = message.from_user.id
    player = await Player.objects.aget(tg_id=tg_id)

    if not player.tg_username or player.tg_username != message.from_user.username:
        player.tg_username = message.from_user.username
        await player.asave()

    return message.from_user.username